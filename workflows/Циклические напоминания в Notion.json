{
  "id": 3,
  "name": "Циклические напоминания в Notion",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "1b12ef44-1cc4-4a3b-9cbc-60532bbeb405",
      "name": "Начало (он же ручной запуск)",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        260,
        400
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            },
            {
              "name": "templateDB",
              "value": "9bfcafdd2c044073924eb32bfa7671d9"
            },
            {
              "name": "tasklist",
              "value": "cf149754de194c6cbe23a1eb821c30ca"
            }
          ]
        },
        "options": {}
      },
      "id": "973f916d-c72a-40d9-9c5e-35af6a36c4b0",
      "name": "Глобальные значения",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "requestMethod": "POST",
        "url": "=https://api.notion.com/v1/databases/{{$json[\"templateDB\"]}}/query",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "={\n \"Notion-Version\": \"{{$node[\"Глобальные значения\"].parameter[\"values\"][\"string\"][0][\"value\"]}}\"\n}"
      },
      "id": "588aaeda-d1cd-4e82-8749-4aeb337e1aa5",
      "name": "Запрос к БД повторяющихся задач",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        780,
        300
      ],
      "credentials": {
        "notionApi": {
          "id": "4",
          "name": "Notion"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 4
            }
          ]
        }
      },
      "id": "3a679352-70f8-479f-a6e3-a77e625ded32",
      "name": "Выполнять каждый день",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        260,
        200
      ]
    },
    {
      "parameters": {
        "functionCode": "// Code here will run only once, no matter how many input items there are.\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\n// Tip: You can use luxon for dates and $jmespath for querying JSON structures\n\nconst parseFrequency = tokens => {\n  const numbers = new Map();\n  numbers.set(\"один\", 1);\n  numbers.set(\"два\", 2);\n  numbers.set(\"три\", 3);\n  numbers.set(\"четыре\", 4);\n  numbers.set(\"пять\", 5);\n  numbers.set(\"шесть\", 6);\n  numbers.set(\"семь\", 7);\n  numbers.set(\"восемь\", 8);\n  numbers.set(\"девять\", 9);\n  numbers.set(\"десять\", 10);\n  numbers.set(\"одиннадцать\", 11);\n  numbers.set(\"двенадцать\", 12);\n  const units = new Map()\n  units.set(\"миллисекунд\", \"milliseconds\");\n  units.set(\"секунд\", \"seconds\");\n  units.set(\"минут\", \"minutes\");\n  units.set(\"час\", \"hours\");\n  units.set(\"день\", \"days\");\n  units.set(\"дня\", \"days\");\n  units.set(\"недел\", \"weeks\");\n  units.set(\"месяц\", \"months\");\n  units.set(\"квартал\", \"quarters\");\n  units.set(\"год\", \"years\");\n  units.set(\"лет\", \"years\");\n  let number = 1;\n  let unit = undefined;\n\n  for(let i = 0; i < tokens.length; i++) {\n    if (Number.isInteger(Number.parseInt(tokens[i]))) {\n      number = tokens[i];\n      continue;\n    };\n    if (numbers.has(tokens[i])) {\n      number = numbers.get(tokens[i]);\n      continue;\n    };\n    for(let i2 = tokens[i].length; i2 > 0; i2--) {\n      if (units.has(tokens[i].slice(0, i2))) {\n        unit = units.get(tokens[i].slice(0, i2))\n        break;\n      }\n    }\n  };\n\n  return {unit: number};\n};\n\nconst getFrequency = humanReadable => {\n  const tokens = humanReadable.split(\" \").map(token => token.toLowerCase());\n  if (tokens[0] === \"раз\" && tokens[1] === \"в\") {\n    return parseFrequency(tokens.slice(2));\n  }\n  if (tokens[0].slice(0, 4) === \"кажд\") {\n    return parseFrequency(tokens.slice(1));\n  }\n};\n\nconst tasks = items[0].json.results.map(task => {\n  const lastExec = task.properties[\"Последнее выполнение\"] ? DateTime.fromFormat(task.properties[\"Последнее выполнение\"].date.start, \"YYYY-MM-dd\", {zone: 'utc'}): null;\n  const frequency = getFrequency(task.properties[\"Периодичность\"].select.name);\n  // const nextExec = lastExec ? \n  // return {\n  //   id: task.id,\n  //   lastExecution: lastExec,\n  //   nextExecution: \n  // };\n  return frequency;\n});\nreturn { frequency: tasks };"
      },
      "id": "82e137fb-e3ee-433e-bfcf-56b31e352163",
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1060,
        300
      ]
    }
  ],
  "connections": {
    "Начало (он же ручной запуск)": {
      "main": [
        [
          {
            "node": "Глобальные значения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Глобальные значения": {
      "main": [
        [
          {
            "node": "Запрос к БД повторяющихся задач",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Запрос к БД повторяющихся задач": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Выполнять каждый день": {
      "main": [
        [
          {
            "node": "Глобальные значения",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-09-16T07:48:14.142Z",
  "updatedAt": "2022-09-16T18:27:14.639Z",
  "settings": {},
  "staticData": null,
  "pinData": {},
  "tags": []
}