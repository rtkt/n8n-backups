{
  "createdAt": "2022-09-16T03:22:30.639Z",
  "updatedAt": "2023-02-02T13:22:36.000Z",
  "id": "2",
  "name": "Back Up Your n8n Workflows To Github",
  "active": true,
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "position": [
        240,
        300
      ],
      "typeVersion": 1,
      "id": "fd56090e-6cdb-4ef4-9959-882fc769e3b1"
    },
    {
      "parameters": {},
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1900,
        420
      ],
      "typeVersion": 1,
      "id": "9da18e5a-8a51-45fe-85c5-738a5ed05ed7"
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        2200,
        420
      ],
      "typeVersion": 1,
      "id": "10505e9d-c53b-42c3-9134-374faacf774b"
    },
    {
      "parameters": {},
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2400,
        240
      ],
      "typeVersion": 1,
      "id": "9625176a-c499-40f6-a9d2-a27d555faff8"
    },
    {
      "parameters": {},
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2400,
        420
      ],
      "typeVersion": 1,
      "id": "e0310245-f5ea-4ad5-8697-b2de5a914b28"
    },
    {
      "parameters": {},
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2400,
        580
      ],
      "typeVersion": 1,
      "id": "98036002-674c-4534-96db-3bc4b3b1f3ca"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json ({{$json[\"github_status\"]}})"
      },
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        2600,
        420
      ],
      "typeVersion": 1,
      "id": "9bc8ee2a-af0d-442a-948d-a7ac0119fe72",
      "credentials": {
        "githubApi": {
          "id": "3",
          "name": "Github key for repos"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{JSON.parse($node[\"Move Binary Data\"].json[\"data\"]).name}}.json ({{$json[\"github_status\"]}})"
      },
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        2600,
        580
      ],
      "typeVersion": 1,
      "id": "b4ab58a9-6edc-469a-a25c-22da1f407024",
      "credentials": {
        "githubApi": {
          "id": "3",
          "name": "Github key for repos"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// File Returned with Content\nif (Object.keys(items[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from(items[0].json.content, 'base64'));\n  var n8nWorkflow = items[1].json.data;\n  var orderedOriginal = JSON.stringify(origWorkflow, null, 2);\n  \n  // Determine Difference\n  if ( orderedOriginal === n8nWorkflow ) {\n    items[0].json.github_status = \"same\";\n    items[0].json.content_decoded = orderedOriginal;\n  } else {\n    items[0].json.github_status = \"different\";\n    items[0].json.content_decoded = orderedOriginal;\n    items[0].json.n8n_data_stringy = n8nWorkflow;\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = (items[1].json.data);\n  \n  // Proper Formatting\n  items[0].json.github_status = \"new\";\n  items[0].json.n8n_data_stringy = n8nWorkflow;\n}\n\n// Return Items\nreturn items;"
      },
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.function",
      "position": [
        2060,
        420
      ],
      "typeVersion": 1,
      "id": "ca054d85-fbdc-4e5d-a2c9-adc15f74861e"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX"
            }
          ]
        }
      },
      "name": "Every 2 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        240,
        580
      ],
      "typeVersion": 1,
      "id": "103a13b5-0f6e-40be-b9f1-43f35bd5570d"
    },
    {
      "parameters": {
        "filePath": "={{$json[\"filename\"]}}"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [
        1300,
        440
      ],
      "typeVersion": 1,
      "id": "67d61d92-e444-48c9-8673-ebeb56d6c5ba"
    },
    {
      "parameters": {
        "setAllData": false,
        "options": {}
      },
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "position": [
        1500,
        440
      ],
      "typeVersion": 1,
      "id": "bcf09ebf-4e33-40b1-8625-2b921f020218"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "rtkt"
            },
            {
              "name": "repo.name",
              "value": "n8n-backups"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            },
            {
              "name": "backupFolder",
              "value": "/var/lib/n8n/backups/"
            }
          ]
        },
        "options": {}
      },
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        400,
        440
      ],
      "typeVersion": 1,
      "id": "2d2a1233-7a3e-4673-990e-564f12864c38"
    },
    {
      "parameters": {
        "command": "=n8n export:workflow --backup --output={{$json[\"backupFolder\"]}}"
      },
      "name": "Run CLI to export Workflows",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        560,
        440
      ],
      "typeVersion": 1,
      "id": "bd04399a-d9a2-4304-928d-4db834c57c23"
    },
    {
      "parameters": {
        "command": "=ls -1 {{$node[\"Globals\"].json[\"backupFolder\"]}}"
      },
      "name": "List filenames",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        740,
        440
      ],
      "typeVersion": 1,
      "id": "b1a6f0c4-fff4-4477-a08b-6a6380a1d632"
    },
    {
      "parameters": {
        "functionCode": "const newItems = [];\nfor (file of items[0].json.stdout.split('\\n')) {\n  newItems.push({\n    json: {\n      filename: $node[\"Globals\"].json[\"backupFolder\"] + file\n    }\n  });\n}\nreturn newItems;"
      },
      "name": "Convert filenames to objects with path",
      "type": "n8n-nodes-base.function",
      "position": [
        920,
        440
      ],
      "typeVersion": 1,
      "id": "20693a1d-7a9d-4f18-a6ae-6ea423fd8643"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "One at a time",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1100,
        440
      ],
      "typeVersion": 1,
      "id": "e6ef255b-6857-454a-b303-a104b1c1554d"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{JSON.parse($json[\"data\"]).name}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        1700,
        240
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "cbdf2883-4d96-4fdd-9422-94febf428344",
      "credentials": {
        "githubApi": {
          "id": "3",
          "name": "Github key for repos"
        }
      },
      "continueOnFail": true
    }
  ],
  "connections": {
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Run CLI to export Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 2 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "One at a time": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List filenames": {
      "main": [
        [
          {
            "node": "Convert filenames to objects with path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run CLI to export Workflows": {
      "main": [
        [
          {
            "node": "List filenames",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert filenames to objects with path": {
      "main": [
        [
          {
            "node": "One at a time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveExecutionProgress": "DEFAULT",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "4"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "16eb58a5-f36f-474d-92fe-3d10d80d7907",
  "triggerCount": 1,
  "tags": []
}